swagger: "2.0"
info:
  description: "This is API spec of cybex.io."
  version: "1.0.0"
  title: "Cybex API"
  termsOfService: "https://www.cybex.io/app/terms"
  contact:
    email: "service@cybex.io"
host: "api.cybex.io"
basePath: "/v1"
schemes:
- "https"
paths:
  /refData:
    get:
      tags:
      - refData
      summary: "Get reference data."
      operationId: refData.get
      produces:
      - "application/json"
      responses:
        200:
          description: "Request was successful"
          schema:
            type: object

        400:
          description: Parameter Error

        401:
          description: Unauthorized

        404:
          description: Not Found


  /position:
    get:
      tags:
      - position
      summary: Get user's positions.
      description: Get user's positions.
      operationId: position.get
      parameters:
      - name: accountName
        in: query
        description: "Account name"
        required: true
        type: string
      responses:
        200:
          description: "Request was successful"
          schema:
            type: array
            items:
              $ref: '#/definitions/Position'
        400:
          description: Parameter Error

        401:
          description: Unauthorized

        404:
          description: Not Found

  /order:
    get:
      tags:
      - order
      summary: Get all my orders
      operationId: order.get
      parameters:
      - name: accountName
        in: query
        description: "User's account name"
        required: true
        type: string
      - name: orderStatus
        in: query
        description: Filter order status. Use comma to input more than one. E.g. OPEN,FILLED
        required: false
        type: string
      - name: transactionId
        in: query
        description: "Filter transaction id"
        required: false
        type: string
      - name: assetPair
        in: query
        description: "Asset pair"
        required: false
        type: string
      - name: limit
        in: query
        description: "Max return record number. By default, it is 100. Max is 300."
        required: false
        type: number
        format: int32
      - name: reverse
        in: query
        description: "By default, it is true and result will be sorted as newest first."
        required: false
        type: boolean
        default: true
      - name: startTime
        in: query
        description: Query start time. E.g. 2018-12-21T01:36:03.081926Z
        required: false
        type: string
      - name: endTime
        in: query
        description: Query end time. E.g. 2018-12-22T01:36:03.081926Z
        required: false
        type: string
      - name: start
        in: query
        description: Start index for result. By default, it is 1.
        required: false
        type: number
        format: int32

      responses:
        200:
          description: "Request was successful"
          schema:
            type: object

        400:
          description: Parameter Error

        401:
          description: Unauthorized

        404:
          description: Not Found

  /trade:
    get:
      tags:
      - trade
      summary: Get all my trades
      operationId: trade.get
      parameters:
      - name: accountName
        in: query
        description: User's account name
        required: true
        type: string
      - name: assetPair
        in: query
        description: Asset pair
        required: false
        type: string
      - name: limit
        in: query
        description: Max return record number. By default, it is 100. Max is 300.
        required: false
        type: number
        format: int32
      - name: reverse
        in: query
        description: By default, it is true and result will be sorted as newest first.
        required: false
        type: boolean
        default: true
      - name: startTime
        in: query
        description: Query start time. E.g. 2018-12-21T01:36:03.081926Z
        required: false
        type: string
      - name: endTime
        in: query
        description: Query end time. E.g. 2018-12-22T01:36:03.081926Z
        required: false
        type: string
      - name: start
        in: query
        description: Start index for result. By default, it is 1.
        required: false
        type: number
        format: int32

      responses:
        200:
          description: "Request was successful"
          schema:
            type: object

        400:
          description: Parameter Error

        401:
          description: Unauthorized

        404:
          description: Not Found


  /transaction:
    post:
      summary: Place new transaction.
      operationId: transaction.post
      parameters:
      - name: request
        in: body
        required: true
        schema:
          type: object

      responses:
        200:
          description: "Request was successful"
          schema:
            type: object

        400:
          description: Parameter Error

        401:
          description: Unauthorized

        404:
          description: Not Found

  /klines:
    get:
      tags:
      - klines
      summary: Get Kline/candlestick bars for a asset pair
      operationId: klines.get
      parameters:
      - name: assetPair
        in: query
        description: "Asset pair"
        required: true
        type: string
      - name: interval
        in: query
        description: "Query interval"
        required: true
        type: string
        enum:
        - "1m"
        - "3m"
        - "5m"
        - "15m"
        - "30m"
        - "1h"
        - "2h"
        - "4h"
        - "6h"
        - "8h"
        - "12h"
        - "1d"
        - "3d"
        - "1w"
        - "1M"
      - name: startTime
        in: query
        description: "Start time"
        required: true
        type: string
      - name: endTime
        in: query
        description: "End time"
        required: true
        type: string
      - name: limit
        in: query
        description: "Level to be shown"
        required: true
        type: number
        format: int32

      responses:
        200:
          description: "Request was successful"
          schema:
            type: object
            items:
              $ref: '#/definitions/KlinesResponse'
        400:
          description: Parameter Error

        401:
          description: Unauthorized

        404:
          description: Not Found

  /orderBook:
    get:
      tags:
      - orderBook
      summary: Get order book for a asset pair
      operationId: orderBook.get
      parameters:
      - name: assetPair
        in: query
        description: "Asset pair"
        required: true
        type: string
      - name: limit
        in: query
        description: "Level to be shown"
        required: true
        type: number
        format: int32

      responses:
        200:
          description: "Request was successful"
          schema:
            type: object
            items:
              $ref: '#/definitions/OrderBookResponse'
        400:
          description: Parameter Error

        401:
          description: Unauthorized

        404:
          description: Not Found

definitions:
  Position:
    type: object
    properties:
      asset:
        type: string
      quantity:
        type: number
        format: double

  KlinesResponse:
    type: array
    items:
      type: array
      items:
        type: object

  OrderBookResponse:
    type: object
    properties:
      bids:
        type: object
        items:
          type: array
          items:
            type: object
      asks:
        type: object
        items:
          type: array
          items:
            type: object




